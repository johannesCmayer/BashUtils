#/bin/bash
#-- Script to automate https://help.github.com/articles/why-is-git-always-asking-for-my-password

# function by is from m14t/fix_github_https_repo.sh (https://gist.github.com/m14t/3056747)
set_url() {
  REPO_URL=`git remote -v | grep -m1 '^origin' | sed -Ene's#.*(https://[^[:space:]]*).*#\1#p'`
  if [ -z "$REPO_URL" ]; then
    echo "-- ERROR:  Could not identify Repo url."
    echo "   It is possible this repo is already using SSH instead of HTTPS."
    return
  fi

  USER=`echo $REPO_URL | sed -Ene's#https://github.com/([^/]*)/(.*).git#\1#p'`
  if [ -z "$USER" ]; then
    echo "-- ERROR:  Could not identify User."
    return
  fi

  REPO=`echo $REPO_URL | sed -Ene's#https://github.com/([^/]*)/(.*).git#\2#p'`
  if [ -z "$REPO" ]; then
    echo "-- ERROR:  Could not identify Repo."
    return
  fi

  NEW_URL="git@github.com:$USER/$REPO.git"
  echo "Changing repo url from "
  echo "  '$REPO_URL'"
  echo "      to "
  echo "  '$NEW_URL'"
  echo ""

  CHANGE_CMD="git remote set-url origin $NEW_URL"
  `$CHANGE_CMD`

  echo "Success"
}

ROOT_SEARCH=$1
echo "Starting reccursive search for repos from $ROOT_SEARCH"
dirs=$(find "$ROOT_SEARCH" -name .git -type d)
if [[ -z $dirs ]]; then
  echo "No git repos found with recursive search from $ROOT_SEARCH"
  exit 1
fi
if [[ ! -z "$ROOT_SEARCH" ]]; then
  for repo in $dirs; do echo $repo; done
  read -p "Listed repos found with recursive search from $ROOT_SEARCH. Convert all urls to ssh? y/n" -n 1 -r
  echo
  [[ $REPLY =~ ^[Yy]$ ]] || exit 0
  for f in $dirs; do
    cd "$f"
    set_url
  done
else
  set_url
fi

exit 0

