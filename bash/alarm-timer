#!/bin/bash
# This is a simple terminal alarm clock

message="Your time is up!"
imessage="Go"
prompt=""
repeat=false

espeakargs=""

speed=175
pitch=50

seconds=0
minutes=0
hours=0

help_message() {
  echo "usage: $(basename $0) [OPTIONS] secondsToAlarm [OPTIONS]"
  echo "       Arguments to long options are also requried for short options."
  echo ""
  echo "Options:"
  echo "  -w, --wait: Dont terminate timer but wait and repeat the message"
  echo "              after the time runs out."
  echo "  --em MESSAGE: The message to say when time is up."
  echo "                 default=\"$message\""
  echo "  --im MESSAGE: The message to say when starting the timer."
  echo "                 default=\"$imessage\""
  echo "  -s, --seconds: Seconds to alarm. Can be used as alternative"
  echo "                 to passing the seconds as an argument."
  echo "  -m, --minutes: Minutes to alarm."
  echo "  -h, --hours: Hours to alarm."
  echo "  -t, --text: Text to show before timer."
  echo "  -r, --repeat: Restart timer when time runs out."
  echo "  -e, --espeakargs: The args to pass to espeak (or say if espeak"
  echo "                    is not found) as one string."
  echo "  -v, --verbose: Enable additional output."
  echo "  --help: Display this message."
}

while test $# -gt 0
do
  case "$1" in
    --help) help_message; exit 0
      ;;
    -w|--wait) wait_on_exit="T"
      ;;
    --em) message=$2; shift
      ;;
    --im) imessage=$2; shift
      ;;
    -s|--seconds) seconds=$2; shift
      ;;
    -m|--minutes) minutes=$2; shift
      ;;
    -h|--hours) hours=$2; shift
      ;;
    -e|--espeakargs) espeakargs=$2; shift
      ;;
    -v|--verbose) verbose=1;
      ;;
    -t|--text) text="$2"": "; shift
      ;;
    -r|--repeat) repeat=true;
      ;;
    -*) echo "Bad option $1"; exit 1
      ;;
     *) seconds="$1"
      ;;
  esac
  shift
done

if [ "$seconds" == 0 ] && [ "$minutes" == 0 ] && [ "$hours" == 0 ]; then
  help_message
  exit 1
fi


if [ ! -z $(command -v espeak) ]; then
  speak_cmd="espeak $espeakargs"
elif [ ! -z $(command -v say) ]; then
  speak_cmd="say"
else
  echo "No tts command found"
  exit 1
fi

[ verbose = 1 ] && echo "speak command: $speak_cmd"


START_TIME=$(date '+%s')
END_TIME=$(date '+%s' -d "+ $hours hours + $minutes minutes + $seconds seconds")
READABLE_END_TIME=$(date -d "+ $hours hours + $minutes minutes + $seconds seconds")
# echo "End time: $READABLE_END_TIME"

sec=$((END_TIME - $(date '+%s')))
while true; do
  $speak_cmd "$imessage"
  sec_remaining=sec
  while true; do
      sec_remaining="$(($sec_remaining-1))"
      echo -ne "\r\033[K"$text$((sec_remaining / (60 * 60)))h $(((sec_remaining / 60) % 60))m $((sec_remaining % 60))s
      [[ "$sec_remaining" -le 0 ]] && break
      ans=""
      if read -n1 -t1 -s ans; then
        printf " <> pause"
        while [ ! -z $(read -n1 -s ans) ]; do
          :
        done
      fi
  done

  $speak_cmd "$message"

  if [ ! -z "$wait_on_exit" ]; then
    echo -e "\nPlease terminate $(basename $0), pid $$"
    while true; do
      sleep 4
      $speak_cmd "$message"
    done
  fi

  if ! $repeat; then
    break
  fi
done

echo ""

exit 0
